#!/usr/bin/env gura
import(yaml)

//-----------------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------------
if (sys.platform == `mswin) {
	fontName:public = 'Sans'
	fileNameIcon:public		= path.join(sys.maindir, 'guracapture.ico')
} elsif (sys.platform == `linux) {
	fontName:public = 'Sans'
	fileNameIcon:public		= path.join(sys.maindir, 'guracapture.ico')
} elsif (sys.platform == `darwin) {
	fontName:public = 'Hiragino Kaku Gothic Pro'
	fileNameIcon:public		= path.join(sys.maindir, 'guracapture.icns')
} else {
	// nothing to do
}
fileNameCfg						= path.join(sys.cfgdir, 'guracapture.yml')
xMainWindow:public				= -1
yMainWindow:public				= -1
wdMainWindow:public				= 800
htMainWindow:public				= 730
dirNameSource:public			= '/Users/ypsitau/tmp'
dirNameStorage:public			= '/Users/ypsitau/Pictures'
matchPatternFolder:public		= r'\d\d\d\d\d\d\d\d (.+)'
substPatternFolder:public		= '${YYYY}/${YYYY}${MM}${DD} #${N}'
substPatternFile:public			= '${YYYY}_${MM}${DD}_${hh}${mm}${ss}${QQ}'

icon:public		= nil

//-----------------------------------------------------------------------------
// InitializeResource
//-----------------------------------------------------------------------------
InitializeResource() = {
	icon:extern = wx.Icon(fileNameIcon,
						  cond(fileNameIcon.endswith('.ico'),
							   wx.BITMAP_TYPE_ICO, wx.BITMAP_TYPE_ICON))
}

//-----------------------------------------------------------------------------
// LoadConfig
//-----------------------------------------------------------------------------
LoadConfig() = {
	try {
		cfg = yaml.read(fileNameCfg)
		xMainWindow:extern			= cfg['xMainWindow']
		yMainWindow:extern			= cfg['yMainWindow']
		wdMainWindow:extern			= cfg['wdMainWindow']
		htMainWindow:extern			= cfg['htMainWindow']
		dirNameSource:extern		= cfg['dirNameSource']
		dirNameStorage:extern		= cfg['dirNameStorage']
		matchPatternFolder:extern	= cfg['matchPatternFolder']
		substPatternFolder:extern	= cfg['substPatternFolder']
		substPatternFile:extern		= cfg['substPatternFile']
	} catch {}
}

//-----------------------------------------------------------------------------
// SaveConfig
//-----------------------------------------------------------------------------
SaveConfig() = {
	cfg = %{
		'xMainWindow'				=> xMainWindow
		'yMainWindow'				=> yMainWindow
		'wdMainWindow'				=> wdMainWindow
		'htMainWindow'				=> htMainWindow
		'dirNameSource'				=> dirNameSource
		'dirNameStorage'			=> dirNameStorage
		'matchPatternFolder'		=> matchPatternFolder
		'substPatternFolder'		=> substPatternFolder
		'substPatternFile'			=> substPatternFile
	}
	yaml.write(fileNameCfg, cfg)
}

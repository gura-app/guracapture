#!/usr/bin/env gura
import(yaml)
import(cairo)

//-----------------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------------
if (sys.platform == `mswin) {
	fontName:public = 'Sans'
	fileNameIcon:public		= path.join(sys.maindir, 'guracapture.ico')
} elsif (sys.platform == `linux) {
	fontName:public = 'Sans'
	fileNameIcon:public		= path.join(sys.maindir, 'guracapture.ico')
} elsif (sys.platform == `darwin) {
	fontName:public = 'Hiragino Kaku Gothic Pro'
	fileNameIcon:public		= path.join(sys.maindir, 'guracapture.icns')
} else {
	// nothing to do
}
fileNameCfg						= path.join(sys.cfgdir, 'guracapture.yml')
xMainWindow:public				= -1
yMainWindow:public				= -1
wdMainWindow:public				= 800
htMainWindow:public				= 730
dirNameBrowsed:public			= sys.localdir
dirNameSource:public			= sys.localdir
dirNameStorage:public			= path.join(os.getenv('HOME'), 'Pictures')
matchPatternFolder:public		= r'\d{4}/\d{8}'
substPatternFolder:public		= '{YYYY}/{YYYY}{MM}{DD}'
substPatternFile:public			= '{YYYY}_{MM}{DD}_{hh}{mm}{ss}{QQ}'

icon:public						= nil
bmpExpandPlus:public			= nil
bmpExpandMinus:public			= nil

//-----------------------------------------------------------------------------
// InitializeResource
//-----------------------------------------------------------------------------
InitializeResource() = {
	icon:extern = wx.Icon(fileNameIcon,
						  cond(fileNameIcon.endswith('.ico'),
							   wx.BITMAP_TYPE_ICO, wx.BITMAP_TYPE_ICON))
	htImage = 20
	image(`rgba, 16, htImage) {|img|
		img.cairo {|cr|
			cairo.pattern.create_linear(0, 0, 16, 16) {|pat|
				pat.add_color_stop_rgb(0, 1, .6, .6)
				pat.add_color_stop_rgb(1, .7, .3, .3)
				cr.set_source(pat)
			}
			cr.rectangle(2, 2, 13, 13)
			cr.fill()
			cr.set_source_color(`white)
			cr.move_to(4, 8).rel_line_to(8, 0)
			cr.move_to(8, 4).rel_line_to(0, 8)
			cr.set_line_width(3)
			cr.stroke()
		}
		bmpExpandPlus:wx.Bitmap:extern = img
	}
	image(`rgba, 16, htImage) {|img|
		img.cairo {|cr|
			cairo.pattern.create_linear(0, 0, 16, 16) {|pat|
				pat.add_color_stop_rgb(0, 1, .6, .6)
				pat.add_color_stop_rgb(1, .7, .3, .3)
				cr.set_source(pat)
			}
			cr.rectangle(2, 2, 13, 13)
			cr.fill()
			cr.set_source_color(`white)
			cr.move_to(4, 8).rel_line_to(8, 0)
			cr.set_line_width(3)
			cr.stroke()
		}
		bmpExpandMinus:wx.Bitmap:extern = img
	}
}

//-----------------------------------------------------------------------------
// LoadConfig
//-----------------------------------------------------------------------------
LoadConfig() = {
	try {
		cfg = yaml.read(fileNameCfg)
		xMainWindow:extern			= cfg['xMainWindow']
		yMainWindow:extern			= cfg['yMainWindow']
		wdMainWindow:extern			= cfg['wdMainWindow']
		htMainWindow:extern			= cfg['htMainWindow']
		dirNameBrowsed:extern		= cfg['dirNameBrowsed']
		dirNameSource:extern		= cfg['dirNameSource']
		dirNameStorage:extern		= cfg['dirNameStorage']
		matchPatternFolder:extern	= cfg['matchPatternFolder']
		substPatternFolder:extern	= cfg['substPatternFolder']
		substPatternFile:extern		= cfg['substPatternFile']
	} catch {}
	dirFlag = false
	try {
		dirFlag = fs.stat(dirNameSource).isdir
	} catch {}
	if (!dirFlag) {
		dirNameSource:extern = ''
	}
}

//-----------------------------------------------------------------------------
// SaveConfig
//-----------------------------------------------------------------------------
SaveConfig() = {
	cfg = %{
		'xMainWindow'				=> xMainWindow
		'yMainWindow'				=> yMainWindow
		'wdMainWindow'				=> wdMainWindow
		'htMainWindow'				=> htMainWindow
		'dirNameBrowsed'			=> dirNameBrowsed
		'dirNameSource'				=> dirNameSource
		'dirNameStorage'			=> dirNameStorage
		'matchPatternFolder'		=> matchPatternFolder
		'substPatternFolder'		=> substPatternFolder
		'substPatternFile'			=> substPatternFile
	}
	yaml.write(fileNameCfg, cfg)
}
